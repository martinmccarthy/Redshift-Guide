"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClusterSnapshotAlreadyExistsFault = exports.ClusterSecurityGroupQuotaExceededFault = exports.ClusterSecurityGroupAlreadyExistsFault = exports.ClusterQuotaExceededFault = exports.ClusterParameterGroupQuotaExceededFault = exports.ClusterParameterGroupNotFoundFault = exports.ClusterParameterGroupAlreadyExistsFault = exports.ClusterOnLatestRevisionFault = exports.ClusterAlreadyExistsFault = exports.ReservedNodeExchangeStatusType = exports.ResizeNotFoundFault = exports.BucketNotFoundFault = exports.InvalidRetentionPeriodFault = exports.BatchModifyClusterSnapshotsLimitExceededFault = exports.BatchDeleteRequestSizeExceededFault = exports.LimitExceededFault = exports.InvalidClusterSnapshotStateFault = exports.DependentServiceRequestThrottlingFault = exports.ClusterSnapshotNotFoundFault = exports.InvalidClusterStateFault = exports.InvalidAuthorizationStateFault = exports.EndpointAuthorizationsPerClusterLimitExceededFault = exports.EndpointAuthorizationAlreadyExistsFault = exports.InvalidClusterSecurityGroupStateFault = exports.ClusterSecurityGroupNotFoundFault = exports.AuthorizationStatus = exports.AuthorizationQuotaExceededFault = exports.AuthorizationNotFoundFault = exports.AuthorizationAlreadyExistsFault = exports.AuthenticationProfileQuotaExceededFault = exports.AuthenticationProfileNotFoundFault = exports.AuthenticationProfileAlreadyExistsFault = exports.InvalidNamespaceFault = exports.InvalidDataShareFault = exports.DataShareStatus = exports.AquaStatus = exports.AquaConfigurationStatus = exports.UnauthorizedPartnerIntegrationFault = exports.PartnerNotFoundFault = exports.ClusterNotFoundFault = exports.ActionType = exports.AccessToSnapshotDeniedFault = exports.AccessToClusterDeniedFault = exports.UnsupportedOperationFault = exports.ReservedNodeOfferingNotFoundFault = exports.ReservedNodeNotFoundFault = exports.ReservedNodeAlreadyMigratedFault = exports.ReservedNodeAlreadyExistsFault = exports.InvalidReservedNodeStateFault = exports.DependentServiceUnavailableFault = void 0;
exports.UsageLimitBreachAction = exports.ResourceNotFoundFault = exports.SnapshotScheduleQuotaExceededFault = exports.SnapshotScheduleAlreadyExistsFault = exports.ScheduleDefinitionTypeUnsupportedFault = exports.SnapshotCopyGrantQuotaExceededFault = exports.SnapshotCopyGrantAlreadyExistsFault = exports.ScheduledActionTypeUnsupportedFault = exports.ScheduledActionQuotaExceededFault = exports.ScheduledActionAlreadyExistsFault = exports.ScheduledActionState = exports.InvalidScheduleFault = exports.InvalidScheduledActionFault = exports.HsmConfigurationQuotaExceededFault = exports.HsmConfigurationAlreadyExistsFault = exports.HsmClientCertificateQuotaExceededFault = exports.HsmClientCertificateAlreadyExistsFault = exports.SubscriptionSeverityNotFoundFault = exports.SubscriptionEventIdNotFoundFault = exports.SubscriptionCategoryNotFoundFault = exports.SubscriptionAlreadyExistFault = exports.SourceNotFoundFault = exports.SNSTopicArnNotFoundFault = exports.SNSNoAuthorizationFault = exports.SNSInvalidTopicFault = exports.EventSubscriptionQuotaExceededFault = exports.EndpointsPerClusterLimitExceededFault = exports.EndpointsPerAuthorizationLimitExceededFault = exports.EndpointAlreadyExistsFault = exports.UnauthorizedOperation = exports.TagLimitExceededFault = exports.SnapshotScheduleNotFoundFault = exports.NumberOfNodesQuotaExceededFault = exports.NumberOfNodesPerClusterLimitExceededFault = exports.InvalidVPCNetworkStateFault = exports.InvalidTagFault = exports.InvalidSubnet = exports.InvalidElasticIpFault = exports.InvalidClusterTrackFault = exports.InvalidClusterSubnetGroupStateFault = exports.InsufficientClusterCapacityFault = exports.HsmConfigurationNotFoundFault = exports.HsmClientCertificateNotFoundFault = exports.InvalidAuthenticationProfileRequestFault = exports.CopyToRegionDisabledFault = exports.ClusterSubnetQuotaExceededFault = exports.ClusterSubnetGroupQuotaExceededFault = exports.ClusterSubnetGroupNotFoundFault = exports.ClusterSubnetGroupAlreadyExistsFault = exports.ClusterSnapshotQuotaExceededFault = void 0;
exports.AuthorizeSnapshotAccessResultFilterSensitiveLog = exports.SnapshotFilterSensitiveLog = exports.AuthorizeSnapshotAccessMessageFilterSensitiveLog = exports.EndpointAuthorizationFilterSensitiveLog = exports.AuthorizeEndpointAccessMessageFilterSensitiveLog = exports.AuthorizeDataShareMessageFilterSensitiveLog = exports.AuthorizeClusterSecurityGroupIngressResultFilterSensitiveLog = exports.ClusterSecurityGroupFilterSensitiveLog = exports.IPRangeFilterSensitiveLog = exports.EC2SecurityGroupFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.AuthorizeClusterSecurityGroupIngressMessageFilterSensitiveLog = exports.AuthenticationProfileFilterSensitiveLog = exports.ClusterAssociatedToScheduleFilterSensitiveLog = exports.DataShareFilterSensitiveLog = exports.DataShareAssociationFilterSensitiveLog = exports.AssociateDataShareConsumerMessageFilterSensitiveLog = exports.AquaConfigurationFilterSensitiveLog = exports.PartnerIntegrationOutputMessageFilterSensitiveLog = exports.PartnerIntegrationInputMessageFilterSensitiveLog = exports.AccountWithRestoreAccessFilterSensitiveLog = exports.AccountAttributeListFilterSensitiveLog = exports.AccountAttributeFilterSensitiveLog = exports.AttributeValueTargetFilterSensitiveLog = exports.AcceptReservedNodeExchangeOutputMessageFilterSensitiveLog = exports.ReservedNodeFilterSensitiveLog = exports.RecurringChargeFilterSensitiveLog = exports.AcceptReservedNodeExchangeInputMessageFilterSensitiveLog = exports.SortByOrder = exports.SnapshotAttributeToSortBy = exports.UsageLimitNotFoundFault = exports.InvalidClusterSnapshotScheduleStateFault = exports.SnapshotCopyGrantNotFoundFault = exports.InvalidSnapshotCopyGrantStateFault = exports.ScheduledActionNotFoundFault = exports.InvalidHsmConfigurationStateFault = exports.InvalidHsmClientCertificateStateFault = exports.SubscriptionNotFoundFault = exports.InvalidSubscriptionStateFault = exports.InvalidEndpointStateFault = exports.EndpointNotFoundFault = exports.InvalidClusterSubnetStateFault = exports.InvalidClusterParameterGroupStateFault = exports.DataShareStatusForProducer = exports.DataShareStatusForConsumer = exports.UsageLimitAlreadyExistsFault = exports.InvalidUsageLimitFault = exports.UsageLimitPeriod = exports.UsageLimitLimitType = exports.UsageLimitFeatureType = void 0;
exports.CreateAuthenticationProfileResultFilterSensitiveLog = exports.CreateAuthenticationProfileMessageFilterSensitiveLog = exports.CopyClusterSnapshotResultFilterSensitiveLog = exports.CopyClusterSnapshotMessageFilterSensitiveLog = exports.ClusterVersionsMessageFilterSensitiveLog = exports.ClusterVersionFilterSensitiveLog = exports.ClusterSubnetGroupMessageFilterSensitiveLog = exports.ClusterSubnetGroupFilterSensitiveLog = exports.SubnetFilterSensitiveLog = exports.ClustersMessageFilterSensitiveLog = exports.ClusterSecurityGroupMessageFilterSensitiveLog = exports.ClusterParameterGroupsMessageFilterSensitiveLog = exports.ClusterParameterGroupNameMessageFilterSensitiveLog = exports.ClusterParameterGroupDetailsFilterSensitiveLog = exports.ParameterFilterSensitiveLog = exports.ClusterParameterGroupFilterSensitiveLog = exports.ClusterExtendedCredentialsFilterSensitiveLog = exports.ClusterDbRevisionsMessageFilterSensitiveLog = exports.ClusterDbRevisionFilterSensitiveLog = exports.RevisionTargetFilterSensitiveLog = exports.ClusterCredentialsFilterSensitiveLog = exports.ClusterFilterSensitiveLog = exports.VpcSecurityGroupMembershipFilterSensitiveLog = exports.RestoreStatusFilterSensitiveLog = exports.ResizeInfoFilterSensitiveLog = exports.ReservedNodeExchangeStatusFilterSensitiveLog = exports.PendingModifiedValuesFilterSensitiveLog = exports.ClusterIamRoleFilterSensitiveLog = exports.HsmStatusFilterSensitiveLog = exports.EndpointFilterSensitiveLog = exports.VpcEndpointFilterSensitiveLog = exports.NetworkInterfaceFilterSensitiveLog = exports.ElasticIpStatusFilterSensitiveLog = exports.DeferredMaintenanceWindowFilterSensitiveLog = exports.DataTransferProgressFilterSensitiveLog = exports.ClusterSnapshotCopyStatusFilterSensitiveLog = exports.ClusterSecurityGroupMembershipFilterSensitiveLog = exports.ClusterParameterGroupStatusFilterSensitiveLog = exports.ClusterParameterStatusFilterSensitiveLog = exports.ClusterNodeFilterSensitiveLog = exports.ResizeProgressMessageFilterSensitiveLog = exports.CancelResizeMessageFilterSensitiveLog = exports.BatchModifyClusterSnapshotsOutputMessageFilterSensitiveLog = exports.BatchModifyClusterSnapshotsMessageFilterSensitiveLog = exports.BatchDeleteClusterSnapshotsResultFilterSensitiveLog = exports.SnapshotErrorMessageFilterSensitiveLog = exports.BatchDeleteClusterSnapshotsRequestFilterSensitiveLog = exports.DeleteClusterSnapshotMessageFilterSensitiveLog = exports.AvailabilityZoneFilterSensitiveLog = exports.SupportedPlatformFilterSensitiveLog = void 0;
exports.DeleteHsmConfigurationMessageFilterSensitiveLog = exports.DeleteHsmClientCertificateMessageFilterSensitiveLog = exports.DeleteEventSubscriptionMessageFilterSensitiveLog = exports.DeleteEndpointAccessMessageFilterSensitiveLog = exports.DeleteClusterSubnetGroupMessageFilterSensitiveLog = exports.DeleteClusterSnapshotResultFilterSensitiveLog = exports.DeleteClusterSecurityGroupMessageFilterSensitiveLog = exports.DeleteClusterParameterGroupMessageFilterSensitiveLog = exports.DeleteClusterResultFilterSensitiveLog = exports.DeleteClusterMessageFilterSensitiveLog = exports.DeleteAuthenticationProfileResultFilterSensitiveLog = exports.DeleteAuthenticationProfileMessageFilterSensitiveLog = exports.DefaultClusterParametersFilterSensitiveLog = exports.DeauthorizeDataShareMessageFilterSensitiveLog = exports.CustomerStorageMessageFilterSensitiveLog = exports.UsageLimitFilterSensitiveLog = exports.CreateUsageLimitMessageFilterSensitiveLog = exports.CreateTagsMessageFilterSensitiveLog = exports.SnapshotScheduleFilterSensitiveLog = exports.CreateSnapshotScheduleMessageFilterSensitiveLog = exports.CreateSnapshotCopyGrantResultFilterSensitiveLog = exports.SnapshotCopyGrantFilterSensitiveLog = exports.CreateSnapshotCopyGrantMessageFilterSensitiveLog = exports.ScheduledActionFilterSensitiveLog = exports.CreateScheduledActionMessageFilterSensitiveLog = exports.ScheduledActionTypeFilterSensitiveLog = exports.ResumeClusterMessageFilterSensitiveLog = exports.ResizeClusterMessageFilterSensitiveLog = exports.PauseClusterMessageFilterSensitiveLog = exports.CreateHsmConfigurationResultFilterSensitiveLog = exports.HsmConfigurationFilterSensitiveLog = exports.CreateHsmConfigurationMessageFilterSensitiveLog = exports.CreateHsmClientCertificateResultFilterSensitiveLog = exports.HsmClientCertificateFilterSensitiveLog = exports.CreateHsmClientCertificateMessageFilterSensitiveLog = exports.CreateEventSubscriptionResultFilterSensitiveLog = exports.EventSubscriptionFilterSensitiveLog = exports.CreateEventSubscriptionMessageFilterSensitiveLog = exports.EndpointAccessFilterSensitiveLog = exports.CreateEndpointAccessMessageFilterSensitiveLog = exports.CreateClusterSubnetGroupResultFilterSensitiveLog = exports.CreateClusterSubnetGroupMessageFilterSensitiveLog = exports.CreateClusterSnapshotResultFilterSensitiveLog = exports.CreateClusterSnapshotMessageFilterSensitiveLog = exports.CreateClusterSecurityGroupResultFilterSensitiveLog = exports.CreateClusterSecurityGroupMessageFilterSensitiveLog = exports.CreateClusterParameterGroupResultFilterSensitiveLog = exports.CreateClusterParameterGroupMessageFilterSensitiveLog = exports.CreateClusterResultFilterSensitiveLog = exports.CreateClusterMessageFilterSensitiveLog = void 0;
exports.HsmClientCertificateMessageFilterSensitiveLog = exports.DescribeHsmClientCertificatesMessageFilterSensitiveLog = exports.EventSubscriptionsMessageFilterSensitiveLog = exports.DescribeEventSubscriptionsMessageFilterSensitiveLog = exports.EventsMessageFilterSensitiveLog = exports.EventFilterSensitiveLog = exports.DescribeEventsMessageFilterSensitiveLog = exports.EventCategoriesMessageFilterSensitiveLog = exports.EventCategoriesMapFilterSensitiveLog = exports.EventInfoMapFilterSensitiveLog = exports.DescribeEventCategoriesMessageFilterSensitiveLog = exports.EndpointAuthorizationListFilterSensitiveLog = exports.DescribeEndpointAuthorizationMessageFilterSensitiveLog = exports.EndpointAccessListFilterSensitiveLog = exports.DescribeEndpointAccessMessageFilterSensitiveLog = exports.DescribeDefaultClusterParametersResultFilterSensitiveLog = exports.DescribeDefaultClusterParametersMessageFilterSensitiveLog = exports.DescribeDataSharesForProducerResultFilterSensitiveLog = exports.DescribeDataSharesForProducerMessageFilterSensitiveLog = exports.DescribeDataSharesForConsumerResultFilterSensitiveLog = exports.DescribeDataSharesForConsumerMessageFilterSensitiveLog = exports.DescribeDataSharesResultFilterSensitiveLog = exports.DescribeDataSharesMessageFilterSensitiveLog = exports.DescribeClusterVersionsMessageFilterSensitiveLog = exports.TrackListMessageFilterSensitiveLog = exports.MaintenanceTrackFilterSensitiveLog = exports.UpdateTargetFilterSensitiveLog = exports.SupportedOperationFilterSensitiveLog = exports.DescribeClusterTracksMessageFilterSensitiveLog = exports.DescribeClusterSubnetGroupsMessageFilterSensitiveLog = exports.SnapshotMessageFilterSensitiveLog = exports.DescribeClusterSnapshotsMessageFilterSensitiveLog = exports.SnapshotSortingEntityFilterSensitiveLog = exports.DescribeClusterSecurityGroupsMessageFilterSensitiveLog = exports.DescribeClustersMessageFilterSensitiveLog = exports.DescribeClusterParametersMessageFilterSensitiveLog = exports.DescribeClusterParameterGroupsMessageFilterSensitiveLog = exports.DescribeClusterDbRevisionsMessageFilterSensitiveLog = exports.DescribeAuthenticationProfilesResultFilterSensitiveLog = exports.DescribeAuthenticationProfilesMessageFilterSensitiveLog = exports.DescribeAccountAttributesMessageFilterSensitiveLog = exports.DeleteUsageLimitMessageFilterSensitiveLog = exports.DeleteTagsMessageFilterSensitiveLog = exports.DeleteSnapshotScheduleMessageFilterSensitiveLog = exports.DeleteSnapshotCopyGrantMessageFilterSensitiveLog = exports.DeleteScheduledActionMessageFilterSensitiveLog = void 0;
const smithy_client_1 = require("@aws-sdk/smithy-client");
const RedshiftServiceException_1 = require("./RedshiftServiceException");
class DependentServiceUnavailableFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "DependentServiceUnavailableFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DependentServiceUnavailableFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DependentServiceUnavailableFault.prototype);
    }
}
exports.DependentServiceUnavailableFault = DependentServiceUnavailableFault;
class InvalidReservedNodeStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidReservedNodeStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidReservedNodeStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidReservedNodeStateFault.prototype);
    }
}
exports.InvalidReservedNodeStateFault = InvalidReservedNodeStateFault;
class ReservedNodeAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ReservedNodeAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeAlreadyExistsFault.prototype);
    }
}
exports.ReservedNodeAlreadyExistsFault = ReservedNodeAlreadyExistsFault;
class ReservedNodeAlreadyMigratedFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ReservedNodeAlreadyMigratedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeAlreadyMigratedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeAlreadyMigratedFault.prototype);
    }
}
exports.ReservedNodeAlreadyMigratedFault = ReservedNodeAlreadyMigratedFault;
class ReservedNodeNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ReservedNodeNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeNotFoundFault.prototype);
    }
}
exports.ReservedNodeNotFoundFault = ReservedNodeNotFoundFault;
class ReservedNodeOfferingNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ReservedNodeOfferingNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ReservedNodeOfferingNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReservedNodeOfferingNotFoundFault.prototype);
    }
}
exports.ReservedNodeOfferingNotFoundFault = ReservedNodeOfferingNotFoundFault;
class UnsupportedOperationFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "UnsupportedOperationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UnsupportedOperationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnsupportedOperationFault.prototype);
    }
}
exports.UnsupportedOperationFault = UnsupportedOperationFault;
class AccessToClusterDeniedFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AccessToClusterDeniedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessToClusterDeniedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessToClusterDeniedFault.prototype);
    }
}
exports.AccessToClusterDeniedFault = AccessToClusterDeniedFault;
class AccessToSnapshotDeniedFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AccessToSnapshotDeniedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AccessToSnapshotDeniedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AccessToSnapshotDeniedFault.prototype);
    }
}
exports.AccessToSnapshotDeniedFault = AccessToSnapshotDeniedFault;
var ActionType;
(function (ActionType) {
    ActionType["RECOMMEND_NODE_CONFIG"] = "recommend-node-config";
    ActionType["RESIZE_CLUSTER"] = "resize-cluster";
    ActionType["RESTORE_CLUSTER"] = "restore-cluster";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
class ClusterNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterNotFoundFault.prototype);
    }
}
exports.ClusterNotFoundFault = ClusterNotFoundFault;
class PartnerNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "PartnerNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "PartnerNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, PartnerNotFoundFault.prototype);
    }
}
exports.PartnerNotFoundFault = PartnerNotFoundFault;
class UnauthorizedPartnerIntegrationFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "UnauthorizedPartnerIntegrationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedPartnerIntegrationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedPartnerIntegrationFault.prototype);
    }
}
exports.UnauthorizedPartnerIntegrationFault = UnauthorizedPartnerIntegrationFault;
var AquaConfigurationStatus;
(function (AquaConfigurationStatus) {
    AquaConfigurationStatus["AUTO"] = "auto";
    AquaConfigurationStatus["DISABLED"] = "disabled";
    AquaConfigurationStatus["ENABLED"] = "enabled";
})(AquaConfigurationStatus = exports.AquaConfigurationStatus || (exports.AquaConfigurationStatus = {}));
var AquaStatus;
(function (AquaStatus) {
    AquaStatus["APPLYING"] = "applying";
    AquaStatus["DISABLED"] = "disabled";
    AquaStatus["ENABLED"] = "enabled";
})(AquaStatus = exports.AquaStatus || (exports.AquaStatus = {}));
var DataShareStatus;
(function (DataShareStatus) {
    DataShareStatus["ACTIVE"] = "ACTIVE";
    DataShareStatus["AUTHORIZED"] = "AUTHORIZED";
    DataShareStatus["AVAILABLE"] = "AVAILABLE";
    DataShareStatus["DEAUTHORIZED"] = "DEAUTHORIZED";
    DataShareStatus["PENDING_AUTHORIZATION"] = "PENDING_AUTHORIZATION";
    DataShareStatus["REJECTED"] = "REJECTED";
})(DataShareStatus = exports.DataShareStatus || (exports.DataShareStatus = {}));
class InvalidDataShareFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidDataShareFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidDataShareFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidDataShareFault.prototype);
    }
}
exports.InvalidDataShareFault = InvalidDataShareFault;
class InvalidNamespaceFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidNamespaceFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNamespaceFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNamespaceFault.prototype);
    }
}
exports.InvalidNamespaceFault = InvalidNamespaceFault;
class AuthenticationProfileAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AuthenticationProfileAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthenticationProfileAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthenticationProfileAlreadyExistsFault.prototype);
    }
}
exports.AuthenticationProfileAlreadyExistsFault = AuthenticationProfileAlreadyExistsFault;
class AuthenticationProfileNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AuthenticationProfileNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthenticationProfileNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthenticationProfileNotFoundFault.prototype);
    }
}
exports.AuthenticationProfileNotFoundFault = AuthenticationProfileNotFoundFault;
class AuthenticationProfileQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AuthenticationProfileQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthenticationProfileQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthenticationProfileQuotaExceededFault.prototype);
    }
}
exports.AuthenticationProfileQuotaExceededFault = AuthenticationProfileQuotaExceededFault;
class AuthorizationAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AuthorizationAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationAlreadyExistsFault.prototype);
    }
}
exports.AuthorizationAlreadyExistsFault = AuthorizationAlreadyExistsFault;
class AuthorizationNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AuthorizationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationNotFoundFault.prototype);
    }
}
exports.AuthorizationNotFoundFault = AuthorizationNotFoundFault;
class AuthorizationQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "AuthorizationQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AuthorizationQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AuthorizationQuotaExceededFault.prototype);
    }
}
exports.AuthorizationQuotaExceededFault = AuthorizationQuotaExceededFault;
var AuthorizationStatus;
(function (AuthorizationStatus) {
    AuthorizationStatus["AUTHORIZED"] = "Authorized";
    AuthorizationStatus["REVOKING"] = "Revoking";
})(AuthorizationStatus = exports.AuthorizationStatus || (exports.AuthorizationStatus = {}));
class ClusterSecurityGroupNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSecurityGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSecurityGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSecurityGroupNotFoundFault.prototype);
    }
}
exports.ClusterSecurityGroupNotFoundFault = ClusterSecurityGroupNotFoundFault;
class InvalidClusterSecurityGroupStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterSecurityGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterSecurityGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterSecurityGroupStateFault.prototype);
    }
}
exports.InvalidClusterSecurityGroupStateFault = InvalidClusterSecurityGroupStateFault;
class EndpointAuthorizationAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EndpointAuthorizationAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointAuthorizationAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointAuthorizationAlreadyExistsFault.prototype);
    }
}
exports.EndpointAuthorizationAlreadyExistsFault = EndpointAuthorizationAlreadyExistsFault;
class EndpointAuthorizationsPerClusterLimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EndpointAuthorizationsPerClusterLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointAuthorizationsPerClusterLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointAuthorizationsPerClusterLimitExceededFault.prototype);
    }
}
exports.EndpointAuthorizationsPerClusterLimitExceededFault = EndpointAuthorizationsPerClusterLimitExceededFault;
class InvalidAuthorizationStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidAuthorizationStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAuthorizationStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAuthorizationStateFault.prototype);
    }
}
exports.InvalidAuthorizationStateFault = InvalidAuthorizationStateFault;
class InvalidClusterStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterStateFault.prototype);
    }
}
exports.InvalidClusterStateFault = InvalidClusterStateFault;
class ClusterSnapshotNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSnapshotNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSnapshotNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSnapshotNotFoundFault.prototype);
    }
}
exports.ClusterSnapshotNotFoundFault = ClusterSnapshotNotFoundFault;
class DependentServiceRequestThrottlingFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "DependentServiceRequestThrottlingFault",
            $fault: "client",
            ...opts,
        });
        this.name = "DependentServiceRequestThrottlingFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, DependentServiceRequestThrottlingFault.prototype);
    }
}
exports.DependentServiceRequestThrottlingFault = DependentServiceRequestThrottlingFault;
class InvalidClusterSnapshotStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterSnapshotStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterSnapshotStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterSnapshotStateFault.prototype);
    }
}
exports.InvalidClusterSnapshotStateFault = InvalidClusterSnapshotStateFault;
class LimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededFault.prototype);
    }
}
exports.LimitExceededFault = LimitExceededFault;
class BatchDeleteRequestSizeExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "BatchDeleteRequestSizeExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "BatchDeleteRequestSizeExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, BatchDeleteRequestSizeExceededFault.prototype);
    }
}
exports.BatchDeleteRequestSizeExceededFault = BatchDeleteRequestSizeExceededFault;
class BatchModifyClusterSnapshotsLimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "BatchModifyClusterSnapshotsLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "BatchModifyClusterSnapshotsLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, BatchModifyClusterSnapshotsLimitExceededFault.prototype);
    }
}
exports.BatchModifyClusterSnapshotsLimitExceededFault = BatchModifyClusterSnapshotsLimitExceededFault;
class InvalidRetentionPeriodFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidRetentionPeriodFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRetentionPeriodFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRetentionPeriodFault.prototype);
    }
}
exports.InvalidRetentionPeriodFault = InvalidRetentionPeriodFault;
class BucketNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "BucketNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "BucketNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, BucketNotFoundFault.prototype);
    }
}
exports.BucketNotFoundFault = BucketNotFoundFault;
class ResizeNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ResizeNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ResizeNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResizeNotFoundFault.prototype);
    }
}
exports.ResizeNotFoundFault = ResizeNotFoundFault;
var ReservedNodeExchangeStatusType;
(function (ReservedNodeExchangeStatusType) {
    ReservedNodeExchangeStatusType["FAILED"] = "FAILED";
    ReservedNodeExchangeStatusType["IN_PROGRESS"] = "IN_PROGRESS";
    ReservedNodeExchangeStatusType["PENDING"] = "PENDING";
    ReservedNodeExchangeStatusType["REQUESTED"] = "REQUESTED";
    ReservedNodeExchangeStatusType["RETRYING"] = "RETRYING";
    ReservedNodeExchangeStatusType["SUCCEEDED"] = "SUCCEEDED";
})(ReservedNodeExchangeStatusType = exports.ReservedNodeExchangeStatusType || (exports.ReservedNodeExchangeStatusType = {}));
class ClusterAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterAlreadyExistsFault.prototype);
    }
}
exports.ClusterAlreadyExistsFault = ClusterAlreadyExistsFault;
class ClusterOnLatestRevisionFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterOnLatestRevisionFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterOnLatestRevisionFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterOnLatestRevisionFault.prototype);
    }
}
exports.ClusterOnLatestRevisionFault = ClusterOnLatestRevisionFault;
class ClusterParameterGroupAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterParameterGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterParameterGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterParameterGroupAlreadyExistsFault.prototype);
    }
}
exports.ClusterParameterGroupAlreadyExistsFault = ClusterParameterGroupAlreadyExistsFault;
class ClusterParameterGroupNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterParameterGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterParameterGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterParameterGroupNotFoundFault.prototype);
    }
}
exports.ClusterParameterGroupNotFoundFault = ClusterParameterGroupNotFoundFault;
class ClusterParameterGroupQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterParameterGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterParameterGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterParameterGroupQuotaExceededFault.prototype);
    }
}
exports.ClusterParameterGroupQuotaExceededFault = ClusterParameterGroupQuotaExceededFault;
class ClusterQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterQuotaExceededFault.prototype);
    }
}
exports.ClusterQuotaExceededFault = ClusterQuotaExceededFault;
class ClusterSecurityGroupAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSecurityGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSecurityGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSecurityGroupAlreadyExistsFault.prototype);
    }
}
exports.ClusterSecurityGroupAlreadyExistsFault = ClusterSecurityGroupAlreadyExistsFault;
class ClusterSecurityGroupQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSecurityGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSecurityGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSecurityGroupQuotaExceededFault.prototype);
    }
}
exports.ClusterSecurityGroupQuotaExceededFault = ClusterSecurityGroupQuotaExceededFault;
class ClusterSnapshotAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSnapshotAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSnapshotAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSnapshotAlreadyExistsFault.prototype);
    }
}
exports.ClusterSnapshotAlreadyExistsFault = ClusterSnapshotAlreadyExistsFault;
class ClusterSnapshotQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSnapshotQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSnapshotQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSnapshotQuotaExceededFault.prototype);
    }
}
exports.ClusterSnapshotQuotaExceededFault = ClusterSnapshotQuotaExceededFault;
class ClusterSubnetGroupAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSubnetGroupAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSubnetGroupAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSubnetGroupAlreadyExistsFault.prototype);
    }
}
exports.ClusterSubnetGroupAlreadyExistsFault = ClusterSubnetGroupAlreadyExistsFault;
class ClusterSubnetGroupNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSubnetGroupNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSubnetGroupNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSubnetGroupNotFoundFault.prototype);
    }
}
exports.ClusterSubnetGroupNotFoundFault = ClusterSubnetGroupNotFoundFault;
class ClusterSubnetGroupQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSubnetGroupQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSubnetGroupQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSubnetGroupQuotaExceededFault.prototype);
    }
}
exports.ClusterSubnetGroupQuotaExceededFault = ClusterSubnetGroupQuotaExceededFault;
class ClusterSubnetQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ClusterSubnetQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ClusterSubnetQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ClusterSubnetQuotaExceededFault.prototype);
    }
}
exports.ClusterSubnetQuotaExceededFault = ClusterSubnetQuotaExceededFault;
class CopyToRegionDisabledFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "CopyToRegionDisabledFault",
            $fault: "client",
            ...opts,
        });
        this.name = "CopyToRegionDisabledFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, CopyToRegionDisabledFault.prototype);
    }
}
exports.CopyToRegionDisabledFault = CopyToRegionDisabledFault;
class InvalidAuthenticationProfileRequestFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidAuthenticationProfileRequestFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidAuthenticationProfileRequestFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidAuthenticationProfileRequestFault.prototype);
    }
}
exports.InvalidAuthenticationProfileRequestFault = InvalidAuthenticationProfileRequestFault;
class HsmClientCertificateNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "HsmClientCertificateNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "HsmClientCertificateNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, HsmClientCertificateNotFoundFault.prototype);
    }
}
exports.HsmClientCertificateNotFoundFault = HsmClientCertificateNotFoundFault;
class HsmConfigurationNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "HsmConfigurationNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "HsmConfigurationNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, HsmConfigurationNotFoundFault.prototype);
    }
}
exports.HsmConfigurationNotFoundFault = HsmConfigurationNotFoundFault;
class InsufficientClusterCapacityFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InsufficientClusterCapacityFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InsufficientClusterCapacityFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InsufficientClusterCapacityFault.prototype);
    }
}
exports.InsufficientClusterCapacityFault = InsufficientClusterCapacityFault;
class InvalidClusterSubnetGroupStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterSubnetGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterSubnetGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterSubnetGroupStateFault.prototype);
    }
}
exports.InvalidClusterSubnetGroupStateFault = InvalidClusterSubnetGroupStateFault;
class InvalidClusterTrackFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterTrackFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterTrackFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterTrackFault.prototype);
    }
}
exports.InvalidClusterTrackFault = InvalidClusterTrackFault;
class InvalidElasticIpFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidElasticIpFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidElasticIpFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidElasticIpFault.prototype);
    }
}
exports.InvalidElasticIpFault = InvalidElasticIpFault;
class InvalidSubnet extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidSubnet",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubnet";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubnet.prototype);
    }
}
exports.InvalidSubnet = InvalidSubnet;
class InvalidTagFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidTagFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidTagFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidTagFault.prototype);
    }
}
exports.InvalidTagFault = InvalidTagFault;
class InvalidVPCNetworkStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidVPCNetworkStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidVPCNetworkStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidVPCNetworkStateFault.prototype);
    }
}
exports.InvalidVPCNetworkStateFault = InvalidVPCNetworkStateFault;
class NumberOfNodesPerClusterLimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "NumberOfNodesPerClusterLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NumberOfNodesPerClusterLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NumberOfNodesPerClusterLimitExceededFault.prototype);
    }
}
exports.NumberOfNodesPerClusterLimitExceededFault = NumberOfNodesPerClusterLimitExceededFault;
class NumberOfNodesQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "NumberOfNodesQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "NumberOfNodesQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, NumberOfNodesQuotaExceededFault.prototype);
    }
}
exports.NumberOfNodesQuotaExceededFault = NumberOfNodesQuotaExceededFault;
class SnapshotScheduleNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SnapshotScheduleNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotScheduleNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotScheduleNotFoundFault.prototype);
    }
}
exports.SnapshotScheduleNotFoundFault = SnapshotScheduleNotFoundFault;
class TagLimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "TagLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "TagLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, TagLimitExceededFault.prototype);
    }
}
exports.TagLimitExceededFault = TagLimitExceededFault;
class UnauthorizedOperation extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "UnauthorizedOperation",
            $fault: "client",
            ...opts,
        });
        this.name = "UnauthorizedOperation";
        this.$fault = "client";
        Object.setPrototypeOf(this, UnauthorizedOperation.prototype);
    }
}
exports.UnauthorizedOperation = UnauthorizedOperation;
class EndpointAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EndpointAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointAlreadyExistsFault.prototype);
    }
}
exports.EndpointAlreadyExistsFault = EndpointAlreadyExistsFault;
class EndpointsPerAuthorizationLimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EndpointsPerAuthorizationLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointsPerAuthorizationLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointsPerAuthorizationLimitExceededFault.prototype);
    }
}
exports.EndpointsPerAuthorizationLimitExceededFault = EndpointsPerAuthorizationLimitExceededFault;
class EndpointsPerClusterLimitExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EndpointsPerClusterLimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointsPerClusterLimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointsPerClusterLimitExceededFault.prototype);
    }
}
exports.EndpointsPerClusterLimitExceededFault = EndpointsPerClusterLimitExceededFault;
class EventSubscriptionQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EventSubscriptionQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EventSubscriptionQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EventSubscriptionQuotaExceededFault.prototype);
    }
}
exports.EventSubscriptionQuotaExceededFault = EventSubscriptionQuotaExceededFault;
class SNSInvalidTopicFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SNSInvalidTopicFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSInvalidTopicFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSInvalidTopicFault.prototype);
    }
}
exports.SNSInvalidTopicFault = SNSInvalidTopicFault;
class SNSNoAuthorizationFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SNSNoAuthorizationFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSNoAuthorizationFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSNoAuthorizationFault.prototype);
    }
}
exports.SNSNoAuthorizationFault = SNSNoAuthorizationFault;
class SNSTopicArnNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SNSTopicArnNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SNSTopicArnNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SNSTopicArnNotFoundFault.prototype);
    }
}
exports.SNSTopicArnNotFoundFault = SNSTopicArnNotFoundFault;
class SourceNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SourceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SourceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SourceNotFoundFault.prototype);
    }
}
exports.SourceNotFoundFault = SourceNotFoundFault;
class SubscriptionAlreadyExistFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionAlreadyExistFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionAlreadyExistFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionAlreadyExistFault.prototype);
    }
}
exports.SubscriptionAlreadyExistFault = SubscriptionAlreadyExistFault;
class SubscriptionCategoryNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionCategoryNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionCategoryNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionCategoryNotFoundFault.prototype);
    }
}
exports.SubscriptionCategoryNotFoundFault = SubscriptionCategoryNotFoundFault;
class SubscriptionEventIdNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionEventIdNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionEventIdNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionEventIdNotFoundFault.prototype);
    }
}
exports.SubscriptionEventIdNotFoundFault = SubscriptionEventIdNotFoundFault;
class SubscriptionSeverityNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionSeverityNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionSeverityNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionSeverityNotFoundFault.prototype);
    }
}
exports.SubscriptionSeverityNotFoundFault = SubscriptionSeverityNotFoundFault;
class HsmClientCertificateAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "HsmClientCertificateAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "HsmClientCertificateAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, HsmClientCertificateAlreadyExistsFault.prototype);
    }
}
exports.HsmClientCertificateAlreadyExistsFault = HsmClientCertificateAlreadyExistsFault;
class HsmClientCertificateQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "HsmClientCertificateQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "HsmClientCertificateQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, HsmClientCertificateQuotaExceededFault.prototype);
    }
}
exports.HsmClientCertificateQuotaExceededFault = HsmClientCertificateQuotaExceededFault;
class HsmConfigurationAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "HsmConfigurationAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "HsmConfigurationAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, HsmConfigurationAlreadyExistsFault.prototype);
    }
}
exports.HsmConfigurationAlreadyExistsFault = HsmConfigurationAlreadyExistsFault;
class HsmConfigurationQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "HsmConfigurationQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "HsmConfigurationQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, HsmConfigurationQuotaExceededFault.prototype);
    }
}
exports.HsmConfigurationQuotaExceededFault = HsmConfigurationQuotaExceededFault;
class InvalidScheduledActionFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidScheduledActionFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidScheduledActionFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidScheduledActionFault.prototype);
    }
}
exports.InvalidScheduledActionFault = InvalidScheduledActionFault;
class InvalidScheduleFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidScheduleFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidScheduleFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidScheduleFault.prototype);
    }
}
exports.InvalidScheduleFault = InvalidScheduleFault;
var ScheduledActionState;
(function (ScheduledActionState) {
    ScheduledActionState["ACTIVE"] = "ACTIVE";
    ScheduledActionState["DISABLED"] = "DISABLED";
})(ScheduledActionState = exports.ScheduledActionState || (exports.ScheduledActionState = {}));
class ScheduledActionAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ScheduledActionAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ScheduledActionAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScheduledActionAlreadyExistsFault.prototype);
    }
}
exports.ScheduledActionAlreadyExistsFault = ScheduledActionAlreadyExistsFault;
class ScheduledActionQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ScheduledActionQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ScheduledActionQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScheduledActionQuotaExceededFault.prototype);
    }
}
exports.ScheduledActionQuotaExceededFault = ScheduledActionQuotaExceededFault;
class ScheduledActionTypeUnsupportedFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ScheduledActionTypeUnsupportedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ScheduledActionTypeUnsupportedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScheduledActionTypeUnsupportedFault.prototype);
    }
}
exports.ScheduledActionTypeUnsupportedFault = ScheduledActionTypeUnsupportedFault;
class SnapshotCopyGrantAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SnapshotCopyGrantAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotCopyGrantAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotCopyGrantAlreadyExistsFault.prototype);
    }
}
exports.SnapshotCopyGrantAlreadyExistsFault = SnapshotCopyGrantAlreadyExistsFault;
class SnapshotCopyGrantQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SnapshotCopyGrantQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotCopyGrantQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotCopyGrantQuotaExceededFault.prototype);
    }
}
exports.SnapshotCopyGrantQuotaExceededFault = SnapshotCopyGrantQuotaExceededFault;
class ScheduleDefinitionTypeUnsupportedFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ScheduleDefinitionTypeUnsupportedFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ScheduleDefinitionTypeUnsupportedFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScheduleDefinitionTypeUnsupportedFault.prototype);
    }
}
exports.ScheduleDefinitionTypeUnsupportedFault = ScheduleDefinitionTypeUnsupportedFault;
class SnapshotScheduleAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SnapshotScheduleAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotScheduleAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotScheduleAlreadyExistsFault.prototype);
    }
}
exports.SnapshotScheduleAlreadyExistsFault = SnapshotScheduleAlreadyExistsFault;
class SnapshotScheduleQuotaExceededFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SnapshotScheduleQuotaExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotScheduleQuotaExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotScheduleQuotaExceededFault.prototype);
    }
}
exports.SnapshotScheduleQuotaExceededFault = SnapshotScheduleQuotaExceededFault;
class ResourceNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundFault.prototype);
    }
}
exports.ResourceNotFoundFault = ResourceNotFoundFault;
var UsageLimitBreachAction;
(function (UsageLimitBreachAction) {
    UsageLimitBreachAction["DISABLE"] = "disable";
    UsageLimitBreachAction["EMIT_METRIC"] = "emit-metric";
    UsageLimitBreachAction["LOG"] = "log";
})(UsageLimitBreachAction = exports.UsageLimitBreachAction || (exports.UsageLimitBreachAction = {}));
var UsageLimitFeatureType;
(function (UsageLimitFeatureType) {
    UsageLimitFeatureType["CONCURRENCY_SCALING"] = "concurrency-scaling";
    UsageLimitFeatureType["CROSS_REGION_DATASHARING"] = "cross-region-datasharing";
    UsageLimitFeatureType["SPECTRUM"] = "spectrum";
})(UsageLimitFeatureType = exports.UsageLimitFeatureType || (exports.UsageLimitFeatureType = {}));
var UsageLimitLimitType;
(function (UsageLimitLimitType) {
    UsageLimitLimitType["DATA_SCANNED"] = "data-scanned";
    UsageLimitLimitType["TIME"] = "time";
})(UsageLimitLimitType = exports.UsageLimitLimitType || (exports.UsageLimitLimitType = {}));
var UsageLimitPeriod;
(function (UsageLimitPeriod) {
    UsageLimitPeriod["DAILY"] = "daily";
    UsageLimitPeriod["MONTHLY"] = "monthly";
    UsageLimitPeriod["WEEKLY"] = "weekly";
})(UsageLimitPeriod = exports.UsageLimitPeriod || (exports.UsageLimitPeriod = {}));
class InvalidUsageLimitFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidUsageLimitFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidUsageLimitFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidUsageLimitFault.prototype);
    }
}
exports.InvalidUsageLimitFault = InvalidUsageLimitFault;
class UsageLimitAlreadyExistsFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "UsageLimitAlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UsageLimitAlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UsageLimitAlreadyExistsFault.prototype);
    }
}
exports.UsageLimitAlreadyExistsFault = UsageLimitAlreadyExistsFault;
var DataShareStatusForConsumer;
(function (DataShareStatusForConsumer) {
    DataShareStatusForConsumer["ACTIVE"] = "ACTIVE";
    DataShareStatusForConsumer["AVAILABLE"] = "AVAILABLE";
})(DataShareStatusForConsumer = exports.DataShareStatusForConsumer || (exports.DataShareStatusForConsumer = {}));
var DataShareStatusForProducer;
(function (DataShareStatusForProducer) {
    DataShareStatusForProducer["ACTIVE"] = "ACTIVE";
    DataShareStatusForProducer["AUTHORIZED"] = "AUTHORIZED";
    DataShareStatusForProducer["DEAUTHORIZED"] = "DEAUTHORIZED";
    DataShareStatusForProducer["PENDING_AUTHORIZATION"] = "PENDING_AUTHORIZATION";
    DataShareStatusForProducer["REJECTED"] = "REJECTED";
})(DataShareStatusForProducer = exports.DataShareStatusForProducer || (exports.DataShareStatusForProducer = {}));
class InvalidClusterParameterGroupStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterParameterGroupStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterParameterGroupStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterParameterGroupStateFault.prototype);
    }
}
exports.InvalidClusterParameterGroupStateFault = InvalidClusterParameterGroupStateFault;
class InvalidClusterSubnetStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterSubnetStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterSubnetStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterSubnetStateFault.prototype);
    }
}
exports.InvalidClusterSubnetStateFault = InvalidClusterSubnetStateFault;
class EndpointNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "EndpointNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "EndpointNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, EndpointNotFoundFault.prototype);
    }
}
exports.EndpointNotFoundFault = EndpointNotFoundFault;
class InvalidEndpointStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidEndpointStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEndpointStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEndpointStateFault.prototype);
    }
}
exports.InvalidEndpointStateFault = InvalidEndpointStateFault;
class InvalidSubscriptionStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidSubscriptionStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSubscriptionStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSubscriptionStateFault.prototype);
    }
}
exports.InvalidSubscriptionStateFault = InvalidSubscriptionStateFault;
class SubscriptionNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SubscriptionNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SubscriptionNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SubscriptionNotFoundFault.prototype);
    }
}
exports.SubscriptionNotFoundFault = SubscriptionNotFoundFault;
class InvalidHsmClientCertificateStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidHsmClientCertificateStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidHsmClientCertificateStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidHsmClientCertificateStateFault.prototype);
    }
}
exports.InvalidHsmClientCertificateStateFault = InvalidHsmClientCertificateStateFault;
class InvalidHsmConfigurationStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidHsmConfigurationStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidHsmConfigurationStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidHsmConfigurationStateFault.prototype);
    }
}
exports.InvalidHsmConfigurationStateFault = InvalidHsmConfigurationStateFault;
class ScheduledActionNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "ScheduledActionNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ScheduledActionNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScheduledActionNotFoundFault.prototype);
    }
}
exports.ScheduledActionNotFoundFault = ScheduledActionNotFoundFault;
class InvalidSnapshotCopyGrantStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidSnapshotCopyGrantStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidSnapshotCopyGrantStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidSnapshotCopyGrantStateFault.prototype);
    }
}
exports.InvalidSnapshotCopyGrantStateFault = InvalidSnapshotCopyGrantStateFault;
class SnapshotCopyGrantNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "SnapshotCopyGrantNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "SnapshotCopyGrantNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, SnapshotCopyGrantNotFoundFault.prototype);
    }
}
exports.SnapshotCopyGrantNotFoundFault = SnapshotCopyGrantNotFoundFault;
class InvalidClusterSnapshotScheduleStateFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "InvalidClusterSnapshotScheduleStateFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidClusterSnapshotScheduleStateFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidClusterSnapshotScheduleStateFault.prototype);
    }
}
exports.InvalidClusterSnapshotScheduleStateFault = InvalidClusterSnapshotScheduleStateFault;
class UsageLimitNotFoundFault extends RedshiftServiceException_1.RedshiftServiceException {
    constructor(opts) {
        super({
            name: "UsageLimitNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "UsageLimitNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, UsageLimitNotFoundFault.prototype);
    }
}
exports.UsageLimitNotFoundFault = UsageLimitNotFoundFault;
var SnapshotAttributeToSortBy;
(function (SnapshotAttributeToSortBy) {
    SnapshotAttributeToSortBy["CREATE_TIME"] = "CREATE_TIME";
    SnapshotAttributeToSortBy["SOURCE_TYPE"] = "SOURCE_TYPE";
    SnapshotAttributeToSortBy["TOTAL_SIZE"] = "TOTAL_SIZE";
})(SnapshotAttributeToSortBy = exports.SnapshotAttributeToSortBy || (exports.SnapshotAttributeToSortBy = {}));
var SortByOrder;
(function (SortByOrder) {
    SortByOrder["ASCENDING"] = "ASC";
    SortByOrder["DESCENDING"] = "DESC";
})(SortByOrder = exports.SortByOrder || (exports.SortByOrder = {}));
const AcceptReservedNodeExchangeInputMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptReservedNodeExchangeInputMessageFilterSensitiveLog = AcceptReservedNodeExchangeInputMessageFilterSensitiveLog;
const RecurringChargeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RecurringChargeFilterSensitiveLog = RecurringChargeFilterSensitiveLog;
const ReservedNodeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReservedNodeFilterSensitiveLog = ReservedNodeFilterSensitiveLog;
const AcceptReservedNodeExchangeOutputMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceptReservedNodeExchangeOutputMessageFilterSensitiveLog = AcceptReservedNodeExchangeOutputMessageFilterSensitiveLog;
const AttributeValueTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttributeValueTargetFilterSensitiveLog = AttributeValueTargetFilterSensitiveLog;
const AccountAttributeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountAttributeFilterSensitiveLog = AccountAttributeFilterSensitiveLog;
const AccountAttributeListFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountAttributeListFilterSensitiveLog = AccountAttributeListFilterSensitiveLog;
const AccountWithRestoreAccessFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AccountWithRestoreAccessFilterSensitiveLog = AccountWithRestoreAccessFilterSensitiveLog;
const PartnerIntegrationInputMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PartnerIntegrationInputMessageFilterSensitiveLog = PartnerIntegrationInputMessageFilterSensitiveLog;
const PartnerIntegrationOutputMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PartnerIntegrationOutputMessageFilterSensitiveLog = PartnerIntegrationOutputMessageFilterSensitiveLog;
const AquaConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AquaConfigurationFilterSensitiveLog = AquaConfigurationFilterSensitiveLog;
const AssociateDataShareConsumerMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AssociateDataShareConsumerMessageFilterSensitiveLog = AssociateDataShareConsumerMessageFilterSensitiveLog;
const DataShareAssociationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DataShareAssociationFilterSensitiveLog = DataShareAssociationFilterSensitiveLog;
const DataShareFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DataShareFilterSensitiveLog = DataShareFilterSensitiveLog;
const ClusterAssociatedToScheduleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterAssociatedToScheduleFilterSensitiveLog = ClusterAssociatedToScheduleFilterSensitiveLog;
const AuthenticationProfileFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthenticationProfileFilterSensitiveLog = AuthenticationProfileFilterSensitiveLog;
const AuthorizeClusterSecurityGroupIngressMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeClusterSecurityGroupIngressMessageFilterSensitiveLog = AuthorizeClusterSecurityGroupIngressMessageFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const EC2SecurityGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EC2SecurityGroupFilterSensitiveLog = EC2SecurityGroupFilterSensitiveLog;
const IPRangeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.IPRangeFilterSensitiveLog = IPRangeFilterSensitiveLog;
const ClusterSecurityGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterSecurityGroupFilterSensitiveLog = ClusterSecurityGroupFilterSensitiveLog;
const AuthorizeClusterSecurityGroupIngressResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeClusterSecurityGroupIngressResultFilterSensitiveLog = AuthorizeClusterSecurityGroupIngressResultFilterSensitiveLog;
const AuthorizeDataShareMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeDataShareMessageFilterSensitiveLog = AuthorizeDataShareMessageFilterSensitiveLog;
const AuthorizeEndpointAccessMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeEndpointAccessMessageFilterSensitiveLog = AuthorizeEndpointAccessMessageFilterSensitiveLog;
const EndpointAuthorizationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointAuthorizationFilterSensitiveLog = EndpointAuthorizationFilterSensitiveLog;
const AuthorizeSnapshotAccessMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeSnapshotAccessMessageFilterSensitiveLog = AuthorizeSnapshotAccessMessageFilterSensitiveLog;
const SnapshotFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotFilterSensitiveLog = SnapshotFilterSensitiveLog;
const AuthorizeSnapshotAccessResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AuthorizeSnapshotAccessResultFilterSensitiveLog = AuthorizeSnapshotAccessResultFilterSensitiveLog;
const SupportedPlatformFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SupportedPlatformFilterSensitiveLog = SupportedPlatformFilterSensitiveLog;
const AvailabilityZoneFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AvailabilityZoneFilterSensitiveLog = AvailabilityZoneFilterSensitiveLog;
const DeleteClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterSnapshotMessageFilterSensitiveLog = DeleteClusterSnapshotMessageFilterSensitiveLog;
const BatchDeleteClusterSnapshotsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchDeleteClusterSnapshotsRequestFilterSensitiveLog = BatchDeleteClusterSnapshotsRequestFilterSensitiveLog;
const SnapshotErrorMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotErrorMessageFilterSensitiveLog = SnapshotErrorMessageFilterSensitiveLog;
const BatchDeleteClusterSnapshotsResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchDeleteClusterSnapshotsResultFilterSensitiveLog = BatchDeleteClusterSnapshotsResultFilterSensitiveLog;
const BatchModifyClusterSnapshotsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchModifyClusterSnapshotsMessageFilterSensitiveLog = BatchModifyClusterSnapshotsMessageFilterSensitiveLog;
const BatchModifyClusterSnapshotsOutputMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchModifyClusterSnapshotsOutputMessageFilterSensitiveLog = BatchModifyClusterSnapshotsOutputMessageFilterSensitiveLog;
const CancelResizeMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelResizeMessageFilterSensitiveLog = CancelResizeMessageFilterSensitiveLog;
const ResizeProgressMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResizeProgressMessageFilterSensitiveLog = ResizeProgressMessageFilterSensitiveLog;
const ClusterNodeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterNodeFilterSensitiveLog = ClusterNodeFilterSensitiveLog;
const ClusterParameterStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterParameterStatusFilterSensitiveLog = ClusterParameterStatusFilterSensitiveLog;
const ClusterParameterGroupStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterParameterGroupStatusFilterSensitiveLog = ClusterParameterGroupStatusFilterSensitiveLog;
const ClusterSecurityGroupMembershipFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterSecurityGroupMembershipFilterSensitiveLog = ClusterSecurityGroupMembershipFilterSensitiveLog;
const ClusterSnapshotCopyStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterSnapshotCopyStatusFilterSensitiveLog = ClusterSnapshotCopyStatusFilterSensitiveLog;
const DataTransferProgressFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DataTransferProgressFilterSensitiveLog = DataTransferProgressFilterSensitiveLog;
const DeferredMaintenanceWindowFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeferredMaintenanceWindowFilterSensitiveLog = DeferredMaintenanceWindowFilterSensitiveLog;
const ElasticIpStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ElasticIpStatusFilterSensitiveLog = ElasticIpStatusFilterSensitiveLog;
const NetworkInterfaceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NetworkInterfaceFilterSensitiveLog = NetworkInterfaceFilterSensitiveLog;
const VpcEndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcEndpointFilterSensitiveLog = VpcEndpointFilterSensitiveLog;
const EndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointFilterSensitiveLog = EndpointFilterSensitiveLog;
const HsmStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HsmStatusFilterSensitiveLog = HsmStatusFilterSensitiveLog;
const ClusterIamRoleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterIamRoleFilterSensitiveLog = ClusterIamRoleFilterSensitiveLog;
const PendingModifiedValuesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PendingModifiedValuesFilterSensitiveLog = PendingModifiedValuesFilterSensitiveLog;
const ReservedNodeExchangeStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReservedNodeExchangeStatusFilterSensitiveLog = ReservedNodeExchangeStatusFilterSensitiveLog;
const ResizeInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResizeInfoFilterSensitiveLog = ResizeInfoFilterSensitiveLog;
const RestoreStatusFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreStatusFilterSensitiveLog = RestoreStatusFilterSensitiveLog;
const VpcSecurityGroupMembershipFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VpcSecurityGroupMembershipFilterSensitiveLog = VpcSecurityGroupMembershipFilterSensitiveLog;
const ClusterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterFilterSensitiveLog = ClusterFilterSensitiveLog;
const ClusterCredentialsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DbPassword && { DbPassword: smithy_client_1.SENSITIVE_STRING }),
});
exports.ClusterCredentialsFilterSensitiveLog = ClusterCredentialsFilterSensitiveLog;
const RevisionTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RevisionTargetFilterSensitiveLog = RevisionTargetFilterSensitiveLog;
const ClusterDbRevisionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterDbRevisionFilterSensitiveLog = ClusterDbRevisionFilterSensitiveLog;
const ClusterDbRevisionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterDbRevisionsMessageFilterSensitiveLog = ClusterDbRevisionsMessageFilterSensitiveLog;
const ClusterExtendedCredentialsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.DbPassword && { DbPassword: smithy_client_1.SENSITIVE_STRING }),
});
exports.ClusterExtendedCredentialsFilterSensitiveLog = ClusterExtendedCredentialsFilterSensitiveLog;
const ClusterParameterGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterParameterGroupFilterSensitiveLog = ClusterParameterGroupFilterSensitiveLog;
const ParameterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ParameterFilterSensitiveLog = ParameterFilterSensitiveLog;
const ClusterParameterGroupDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterParameterGroupDetailsFilterSensitiveLog = ClusterParameterGroupDetailsFilterSensitiveLog;
const ClusterParameterGroupNameMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterParameterGroupNameMessageFilterSensitiveLog = ClusterParameterGroupNameMessageFilterSensitiveLog;
const ClusterParameterGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterParameterGroupsMessageFilterSensitiveLog = ClusterParameterGroupsMessageFilterSensitiveLog;
const ClusterSecurityGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterSecurityGroupMessageFilterSensitiveLog = ClusterSecurityGroupMessageFilterSensitiveLog;
const ClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClustersMessageFilterSensitiveLog = ClustersMessageFilterSensitiveLog;
const SubnetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SubnetFilterSensitiveLog = SubnetFilterSensitiveLog;
const ClusterSubnetGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterSubnetGroupFilterSensitiveLog = ClusterSubnetGroupFilterSensitiveLog;
const ClusterSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterSubnetGroupMessageFilterSensitiveLog = ClusterSubnetGroupMessageFilterSensitiveLog;
const ClusterVersionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterVersionFilterSensitiveLog = ClusterVersionFilterSensitiveLog;
const ClusterVersionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ClusterVersionsMessageFilterSensitiveLog = ClusterVersionsMessageFilterSensitiveLog;
const CopyClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyClusterSnapshotMessageFilterSensitiveLog = CopyClusterSnapshotMessageFilterSensitiveLog;
const CopyClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CopyClusterSnapshotResultFilterSensitiveLog = CopyClusterSnapshotResultFilterSensitiveLog;
const CreateAuthenticationProfileMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAuthenticationProfileMessageFilterSensitiveLog = CreateAuthenticationProfileMessageFilterSensitiveLog;
const CreateAuthenticationProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAuthenticationProfileResultFilterSensitiveLog = CreateAuthenticationProfileResultFilterSensitiveLog;
const CreateClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterMessageFilterSensitiveLog = CreateClusterMessageFilterSensitiveLog;
const CreateClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterResultFilterSensitiveLog = CreateClusterResultFilterSensitiveLog;
const CreateClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterParameterGroupMessageFilterSensitiveLog = CreateClusterParameterGroupMessageFilterSensitiveLog;
const CreateClusterParameterGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterParameterGroupResultFilterSensitiveLog = CreateClusterParameterGroupResultFilterSensitiveLog;
const CreateClusterSecurityGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterSecurityGroupMessageFilterSensitiveLog = CreateClusterSecurityGroupMessageFilterSensitiveLog;
const CreateClusterSecurityGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterSecurityGroupResultFilterSensitiveLog = CreateClusterSecurityGroupResultFilterSensitiveLog;
const CreateClusterSnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterSnapshotMessageFilterSensitiveLog = CreateClusterSnapshotMessageFilterSensitiveLog;
const CreateClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterSnapshotResultFilterSensitiveLog = CreateClusterSnapshotResultFilterSensitiveLog;
const CreateClusterSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterSubnetGroupMessageFilterSensitiveLog = CreateClusterSubnetGroupMessageFilterSensitiveLog;
const CreateClusterSubnetGroupResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateClusterSubnetGroupResultFilterSensitiveLog = CreateClusterSubnetGroupResultFilterSensitiveLog;
const CreateEndpointAccessMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateEndpointAccessMessageFilterSensitiveLog = CreateEndpointAccessMessageFilterSensitiveLog;
const EndpointAccessFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointAccessFilterSensitiveLog = EndpointAccessFilterSensitiveLog;
const CreateEventSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateEventSubscriptionMessageFilterSensitiveLog = CreateEventSubscriptionMessageFilterSensitiveLog;
const EventSubscriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventSubscriptionFilterSensitiveLog = EventSubscriptionFilterSensitiveLog;
const CreateEventSubscriptionResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateEventSubscriptionResultFilterSensitiveLog = CreateEventSubscriptionResultFilterSensitiveLog;
const CreateHsmClientCertificateMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHsmClientCertificateMessageFilterSensitiveLog = CreateHsmClientCertificateMessageFilterSensitiveLog;
const HsmClientCertificateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HsmClientCertificateFilterSensitiveLog = HsmClientCertificateFilterSensitiveLog;
const CreateHsmClientCertificateResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHsmClientCertificateResultFilterSensitiveLog = CreateHsmClientCertificateResultFilterSensitiveLog;
const CreateHsmConfigurationMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHsmConfigurationMessageFilterSensitiveLog = CreateHsmConfigurationMessageFilterSensitiveLog;
const HsmConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HsmConfigurationFilterSensitiveLog = HsmConfigurationFilterSensitiveLog;
const CreateHsmConfigurationResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateHsmConfigurationResultFilterSensitiveLog = CreateHsmConfigurationResultFilterSensitiveLog;
const PauseClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PauseClusterMessageFilterSensitiveLog = PauseClusterMessageFilterSensitiveLog;
const ResizeClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResizeClusterMessageFilterSensitiveLog = ResizeClusterMessageFilterSensitiveLog;
const ResumeClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ResumeClusterMessageFilterSensitiveLog = ResumeClusterMessageFilterSensitiveLog;
const ScheduledActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScheduledActionTypeFilterSensitiveLog = ScheduledActionTypeFilterSensitiveLog;
const CreateScheduledActionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateScheduledActionMessageFilterSensitiveLog = CreateScheduledActionMessageFilterSensitiveLog;
const ScheduledActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScheduledActionFilterSensitiveLog = ScheduledActionFilterSensitiveLog;
const CreateSnapshotCopyGrantMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSnapshotCopyGrantMessageFilterSensitiveLog = CreateSnapshotCopyGrantMessageFilterSensitiveLog;
const SnapshotCopyGrantFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotCopyGrantFilterSensitiveLog = SnapshotCopyGrantFilterSensitiveLog;
const CreateSnapshotCopyGrantResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSnapshotCopyGrantResultFilterSensitiveLog = CreateSnapshotCopyGrantResultFilterSensitiveLog;
const CreateSnapshotScheduleMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateSnapshotScheduleMessageFilterSensitiveLog = CreateSnapshotScheduleMessageFilterSensitiveLog;
const SnapshotScheduleFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotScheduleFilterSensitiveLog = SnapshotScheduleFilterSensitiveLog;
const CreateTagsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTagsMessageFilterSensitiveLog = CreateTagsMessageFilterSensitiveLog;
const CreateUsageLimitMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateUsageLimitMessageFilterSensitiveLog = CreateUsageLimitMessageFilterSensitiveLog;
const UsageLimitFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UsageLimitFilterSensitiveLog = UsageLimitFilterSensitiveLog;
const CustomerStorageMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CustomerStorageMessageFilterSensitiveLog = CustomerStorageMessageFilterSensitiveLog;
const DeauthorizeDataShareMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeauthorizeDataShareMessageFilterSensitiveLog = DeauthorizeDataShareMessageFilterSensitiveLog;
const DefaultClusterParametersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DefaultClusterParametersFilterSensitiveLog = DefaultClusterParametersFilterSensitiveLog;
const DeleteAuthenticationProfileMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAuthenticationProfileMessageFilterSensitiveLog = DeleteAuthenticationProfileMessageFilterSensitiveLog;
const DeleteAuthenticationProfileResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAuthenticationProfileResultFilterSensitiveLog = DeleteAuthenticationProfileResultFilterSensitiveLog;
const DeleteClusterMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterMessageFilterSensitiveLog = DeleteClusterMessageFilterSensitiveLog;
const DeleteClusterResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterResultFilterSensitiveLog = DeleteClusterResultFilterSensitiveLog;
const DeleteClusterParameterGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterParameterGroupMessageFilterSensitiveLog = DeleteClusterParameterGroupMessageFilterSensitiveLog;
const DeleteClusterSecurityGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterSecurityGroupMessageFilterSensitiveLog = DeleteClusterSecurityGroupMessageFilterSensitiveLog;
const DeleteClusterSnapshotResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterSnapshotResultFilterSensitiveLog = DeleteClusterSnapshotResultFilterSensitiveLog;
const DeleteClusterSubnetGroupMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteClusterSubnetGroupMessageFilterSensitiveLog = DeleteClusterSubnetGroupMessageFilterSensitiveLog;
const DeleteEndpointAccessMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEndpointAccessMessageFilterSensitiveLog = DeleteEndpointAccessMessageFilterSensitiveLog;
const DeleteEventSubscriptionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteEventSubscriptionMessageFilterSensitiveLog = DeleteEventSubscriptionMessageFilterSensitiveLog;
const DeleteHsmClientCertificateMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteHsmClientCertificateMessageFilterSensitiveLog = DeleteHsmClientCertificateMessageFilterSensitiveLog;
const DeleteHsmConfigurationMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteHsmConfigurationMessageFilterSensitiveLog = DeleteHsmConfigurationMessageFilterSensitiveLog;
const DeleteScheduledActionMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteScheduledActionMessageFilterSensitiveLog = DeleteScheduledActionMessageFilterSensitiveLog;
const DeleteSnapshotCopyGrantMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSnapshotCopyGrantMessageFilterSensitiveLog = DeleteSnapshotCopyGrantMessageFilterSensitiveLog;
const DeleteSnapshotScheduleMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteSnapshotScheduleMessageFilterSensitiveLog = DeleteSnapshotScheduleMessageFilterSensitiveLog;
const DeleteTagsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTagsMessageFilterSensitiveLog = DeleteTagsMessageFilterSensitiveLog;
const DeleteUsageLimitMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteUsageLimitMessageFilterSensitiveLog = DeleteUsageLimitMessageFilterSensitiveLog;
const DescribeAccountAttributesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAccountAttributesMessageFilterSensitiveLog = DescribeAccountAttributesMessageFilterSensitiveLog;
const DescribeAuthenticationProfilesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAuthenticationProfilesMessageFilterSensitiveLog = DescribeAuthenticationProfilesMessageFilterSensitiveLog;
const DescribeAuthenticationProfilesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAuthenticationProfilesResultFilterSensitiveLog = DescribeAuthenticationProfilesResultFilterSensitiveLog;
const DescribeClusterDbRevisionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterDbRevisionsMessageFilterSensitiveLog = DescribeClusterDbRevisionsMessageFilterSensitiveLog;
const DescribeClusterParameterGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterParameterGroupsMessageFilterSensitiveLog = DescribeClusterParameterGroupsMessageFilterSensitiveLog;
const DescribeClusterParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterParametersMessageFilterSensitiveLog = DescribeClusterParametersMessageFilterSensitiveLog;
const DescribeClustersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClustersMessageFilterSensitiveLog = DescribeClustersMessageFilterSensitiveLog;
const DescribeClusterSecurityGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterSecurityGroupsMessageFilterSensitiveLog = DescribeClusterSecurityGroupsMessageFilterSensitiveLog;
const SnapshotSortingEntityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotSortingEntityFilterSensitiveLog = SnapshotSortingEntityFilterSensitiveLog;
const DescribeClusterSnapshotsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterSnapshotsMessageFilterSensitiveLog = DescribeClusterSnapshotsMessageFilterSensitiveLog;
const SnapshotMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SnapshotMessageFilterSensitiveLog = SnapshotMessageFilterSensitiveLog;
const DescribeClusterSubnetGroupsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterSubnetGroupsMessageFilterSensitiveLog = DescribeClusterSubnetGroupsMessageFilterSensitiveLog;
const DescribeClusterTracksMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterTracksMessageFilterSensitiveLog = DescribeClusterTracksMessageFilterSensitiveLog;
const SupportedOperationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SupportedOperationFilterSensitiveLog = SupportedOperationFilterSensitiveLog;
const UpdateTargetFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTargetFilterSensitiveLog = UpdateTargetFilterSensitiveLog;
const MaintenanceTrackFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MaintenanceTrackFilterSensitiveLog = MaintenanceTrackFilterSensitiveLog;
const TrackListMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TrackListMessageFilterSensitiveLog = TrackListMessageFilterSensitiveLog;
const DescribeClusterVersionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeClusterVersionsMessageFilterSensitiveLog = DescribeClusterVersionsMessageFilterSensitiveLog;
const DescribeDataSharesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDataSharesMessageFilterSensitiveLog = DescribeDataSharesMessageFilterSensitiveLog;
const DescribeDataSharesResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDataSharesResultFilterSensitiveLog = DescribeDataSharesResultFilterSensitiveLog;
const DescribeDataSharesForConsumerMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDataSharesForConsumerMessageFilterSensitiveLog = DescribeDataSharesForConsumerMessageFilterSensitiveLog;
const DescribeDataSharesForConsumerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDataSharesForConsumerResultFilterSensitiveLog = DescribeDataSharesForConsumerResultFilterSensitiveLog;
const DescribeDataSharesForProducerMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDataSharesForProducerMessageFilterSensitiveLog = DescribeDataSharesForProducerMessageFilterSensitiveLog;
const DescribeDataSharesForProducerResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDataSharesForProducerResultFilterSensitiveLog = DescribeDataSharesForProducerResultFilterSensitiveLog;
const DescribeDefaultClusterParametersMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDefaultClusterParametersMessageFilterSensitiveLog = DescribeDefaultClusterParametersMessageFilterSensitiveLog;
const DescribeDefaultClusterParametersResultFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeDefaultClusterParametersResultFilterSensitiveLog = DescribeDefaultClusterParametersResultFilterSensitiveLog;
const DescribeEndpointAccessMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEndpointAccessMessageFilterSensitiveLog = DescribeEndpointAccessMessageFilterSensitiveLog;
const EndpointAccessListFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointAccessListFilterSensitiveLog = EndpointAccessListFilterSensitiveLog;
const DescribeEndpointAuthorizationMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEndpointAuthorizationMessageFilterSensitiveLog = DescribeEndpointAuthorizationMessageFilterSensitiveLog;
const EndpointAuthorizationListFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointAuthorizationListFilterSensitiveLog = EndpointAuthorizationListFilterSensitiveLog;
const DescribeEventCategoriesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEventCategoriesMessageFilterSensitiveLog = DescribeEventCategoriesMessageFilterSensitiveLog;
const EventInfoMapFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventInfoMapFilterSensitiveLog = EventInfoMapFilterSensitiveLog;
const EventCategoriesMapFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventCategoriesMapFilterSensitiveLog = EventCategoriesMapFilterSensitiveLog;
const EventCategoriesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventCategoriesMessageFilterSensitiveLog = EventCategoriesMessageFilterSensitiveLog;
const DescribeEventsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEventsMessageFilterSensitiveLog = DescribeEventsMessageFilterSensitiveLog;
const EventFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventFilterSensitiveLog = EventFilterSensitiveLog;
const EventsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventsMessageFilterSensitiveLog = EventsMessageFilterSensitiveLog;
const DescribeEventSubscriptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEventSubscriptionsMessageFilterSensitiveLog = DescribeEventSubscriptionsMessageFilterSensitiveLog;
const EventSubscriptionsMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EventSubscriptionsMessageFilterSensitiveLog = EventSubscriptionsMessageFilterSensitiveLog;
const DescribeHsmClientCertificatesMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeHsmClientCertificatesMessageFilterSensitiveLog = DescribeHsmClientCertificatesMessageFilterSensitiveLog;
const HsmClientCertificateMessageFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.HsmClientCertificateMessageFilterSensitiveLog = HsmClientCertificateMessageFilterSensitiveLog;
